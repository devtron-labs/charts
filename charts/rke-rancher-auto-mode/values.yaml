name: "example-rke-cluster" # Name for the Helm release, can be same as cluster_name_in_rancher
rancher_api_url: "https://your-rancher-server.example.com/v3" # TODO: Replace with your Rancher API URL
rancher_access_key: "" # TODO: Provide Rancher Access Key (Bearer Token)
rancher_secret_key: "" # TODO: Provide Rancher Secret Key (Bearer Token Secret, if applicable)
cluster_name_in_rancher: "my-rke-cluster" # Name of the cluster as it will appear in Rancher
rke_kubernetes_version: "v1.27.7-rancher1-1" # Specify desired RKE Kubernetes version

# Node pool configuration (this is a simplified example, actual structure depends on TF module)
# The TF module would typically loop through these to create node pools.
node_pools:
  - name: "pool1"
    count: 1
    machine_config: # This would map to a specific machine config in Rancher or be defined inline
      kind: DockerMachine # Example, could be vSphereMachineConfig, Amazonec2Config etc.
      name: "my-machine-driver-config" # Name of a pre-existing machine config in Rancher or to be created
    roles: ["etcd", "controlplane", "worker"] # Assign roles to this node pool

# Example tags (applicability depends on the underlying provider used by Rancher for nodes)
resource_tags:
  team: "Devops_Team"
  environment: "non-production"
  project: "rke-project"

# Terraform controller specific values
path: "./terraform/rke-rancher-auto-mode" # This path is an assumption
approvePlan: "auto"
destroyResourcesOnDeletion: false
alwaysCleanupRunnerPod: false
force: false

# Runner pod specific (can remain common or be adapted)
# affinity: {}
# tolerations: []
