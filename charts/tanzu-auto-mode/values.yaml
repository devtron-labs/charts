name: "example-tanzu-cluster" # Name for the Helm release
tanzu_kubernetes_release: "v1.27.5---vmware.2-tkg.1" # TODO: Verify TKR from your environment
# management_cluster_name: "my-tkg-management-cluster" # Name of the TKG Management Cluster (if provisioning a workload cluster)
# provisioner: "tkg" # Could be 'tkg' for workload cluster, or 'management' for management cluster itself

# vSphere specific parameters (assuming TKG on vSphere)
vsphere_server: "vcsa.example.com" # TODO: vCenter server FQDN or IP
vsphere_username: "administrator@vsphere.local" # TODO: vCenter username
vsphere_password: "" # TODO: vCenter password (consider using a secret)
vsphere_datacenter: "/SDDC-Datacenter" # TODO: vSphere Datacenter path
vsphere_datastore: "/SDDC-Datacenter/datastore/vsanDatastore" # TODO: vSphere Datastore path
vsphere_network: "/SDDC-Datacenter/network/segment-A" # TODO: vSphere Network path for VMs
vsphere_resource_pool: "/SDDC-Datacenter/host/Cluster-1/Resources/my-rp" # TODO: vSphere Resource Pool path
vsphere_folder: "/SDDC-Datacenter/vm/TKG" # TODO: Optional vSphere VM folder
vsphere_ssh_authorized_key: "ssh-rsa AAAA..." # TODO: SSH public key for node access
# vsphere_template_name: "photon-3-kube-v1.27.5---vmware.2-tkg.1" # Usually derived or discovered by TF provider

# Cluster configuration
cluster_name: "my-tanzu-workload-cluster"
control_plane_vm_class: "best-effort-small" # TKG VM class for control plane nodes
worker_vm_class: "best-effort-small" # TKG VM class for worker nodes
control_plane_replicas: 1 # For non-prod, 3 for prod
worker_replicas: 1
# cni: "antrea" # antrea (default) or calico

# Example tags (might map to vSphere tags or labels)
resource_tags:
  team: "Devops_Team"
  environment: "non-production"
  project: "tanzu-project"

# Terraform controller specific values
path: "./terraform/tanzu-auto-mode" # This path is an assumption
approvePlan: "auto"
destroyResourcesOnDeletion: false
alwaysCleanupRunnerPod: false
force: false

# Runner pod specific (can remain common or be adapted)
# affinity: {}
# tolerations: []
