apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: argo-rollouts-role
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts-role
rules:
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - argoproj.io
    resources:
      - rollouts
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - argoproj.io
    resources:
      - analysisruns
      - experiments
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - argoproj.io
    resources:
      - analysistemplates
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: aggregate-cluster-role
    app.kubernetes.io/name: argo-rollouts-aggregate-to-admin
    app.kubernetes.io/part-of: argo-rollouts
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: argo-rollouts-aggregate-to-admin
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - rollouts
      - experiments
      - analysistemplates
      - analysisruns
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: aggregate-cluster-role
    app.kubernetes.io/name: argo-rollouts-aggregate-to-edit
    app.kubernetes.io/part-of: argo-rollouts
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: argo-rollouts-aggregate-to-edit
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - rollouts
      - experiments
      - analysistemplates
      - analysisruns
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: aggregate-cluster-role
    app.kubernetes.io/name: argo-rollouts-aggregate-to-view
    app.kubernetes.io/part-of: argo-rollouts
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: argo-rollouts-aggregate-to-view
rules:
  - apiGroups:
      - argoproj.io
    resources:
      - rollouts
      - experiments
      - analysistemplates
      - analysisruns
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: argo-rollouts-clusterrole
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts-clusterrole
rules:
  - apiGroups:
      - apps
    resources:
      - replicasets
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
      - patch
  - apiGroups:
      - argoproj.io
    resources:
      - rollouts
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - argoproj.io
    resources:
      - analysisruns
      - experiments
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - argoproj.io
    resources:
      - analysistemplates
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: argo-rollouts-role-binding
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-rollouts-role
subjects:
  - kind: ServiceAccount
    name: argo-rollouts
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: argo-rollouts-clusterrolebinding
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-rollouts-clusterrole
subjects:
  - kind: ServiceAccount
    name: argo-rollouts
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: argo-rollouts-metrics
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts-metrics
spec:
  ports:
    - name: metrics
      port: 8090
      protocol: TCP
      targetPort: 8090
  selector:
    app.kubernetes.io/name: argo-rollouts
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: {{ $.Release.Name }}
    app.kubernetes.io/part-of: argo-rollouts
  name: {{ $.Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $.Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $.Release.Name }}
      {{- if .Values.podLabels }}{{ toYaml .Values.podLabels | nindent 8 }}
      {{- end }}
      {{- if .Values.podAnnotations }}
      annotations: {{ toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      containers:
      - command:
        - /bin/rollouts-controller
        {{- if and .Values.namespaced .Values.extraArgs }}
        args:
        - --namespace={{ $.Release.Namespace }}
{{- toYaml .Values.extraArgs | nindent 8 }}
        {{- else if .Values.extraArgs }}
        args:
{{- toYaml .Values.extraArgs | nindent 8 }}
        {{- else if .Values.namespaced }}
        args:
        - --namespace={{ $.Release.Namespace }}
        {{- end }}
        image: {{ .Values.rollout.image }}
        imagePullPolicy: {{ .Values.rollout.imagePullPolicy }}
        name: argo-rollouts
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        resources:
          requests:
            memory: {{ .Values.rollout.resources.requests.memory }}
            cpu: {{ .Values.rollout.resources.requests.cpu }}
          limits:
            memory: {{ .Values.rollout.resources.limits.memory }}
            cpu: {{ .Values.rollout.resources.limits.cpu }}
      serviceAccountName: argo-rollouts
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
     {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      volumes:
      - emptyDir: {}
        name: tmp
