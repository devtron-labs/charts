apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: tenant-onboarding
spec:
  serviceAccountName: {{ .Values.serviceAccountName }}
  entrypoint: dag-first
  templates:
    - name: tenant-onboarding
      inputs:
        parameters:
        - name: command
      container:
        command: [bash -c]
        args: ["{{`{{inputs.parameters.command}}`}}"]
        envFrom:
          - configMapRef:
              name: f-default
          - secretRef:
              name: f-default
    - name: dag-first
      dag:
        tasks:
          - name: tenant-data-creation
            template: tenant-onboarding
            image: {{ .Values.tenant_data_creation.image }}:{{ .Values.tenant_data_creation.tag }}
            arguments:
              parameters: [{name: command, value: "[yarn run script to -s all -w query -t {{ .Values.tenant_id }}]" }]
          - name: bake-tenant-dns`
            dependencies: [First]
            template: tenant-onboarding
            image: {{ .Values.bake_tenant_dns.image }}:{{ .Values.bake_tenant_dns.tag }}
            arguments:
              parameters: [{name: command, value: "[./upsert-dns-recordset.sh]" }]
          - name: entity-data-population
            dependencies: [First]
            template: tenant-onboarding
            image: {{ .Values.entity_data_population.image }}:{{ .Values.entity_data_population.tag }}
            arguments:
              parameters: [{name: command, value: "[yarn script csvToDb csv -f entity_script/csvs/event.csv -w event -t {{ .Values.tenant_id }} -e {{ .Values.entity_data_population.env }} -k coreos && yarn script csvToDb csv -f entity_script/csvs/reason.csv -w reason -t {{ .Values.tenant_id }} -e {{ .Values.entity_data_population.env }} -k coreos]" }]