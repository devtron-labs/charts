{{- if .Values.global.AZURE.enabled }}
{{ if semverCompare ">=1.21-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: batch/v1
{{ else -}}
apiVersion: batch/v1beta1
{{ end -}}
kind: CronJob
metadata:
  name: postgres-app-backup-cronjob
  namespace: devtroncd
spec:
  schedule: {{ .Values.global.schedule | quote }}
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
          - name: postgres-app-backup-cronjob
            image: postgres:11.3
            volumeMounts:
            - mountPath: /tmp
              name: psql-volume
            env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  key: PG_PASSWORD
                  name: {{ .Values.postgres_backup.secretName }}
            imagePullPolicy: Always
            args:
            - /bin/bash
            - -c
            - pg_dumpall -h postgresql-postgresql.devtroncd -p 5432 -U postgres --no-privileges > /tmp/backup.tar;
          containers:
          - name: azure-cli-download
            image: quay.io/devtron/k8s-utils:az-cli-ubuntu
            volumeMounts:
            - mountPath: /tmp
              name: psql-volume
            env:
            {{- with .Values.global.AZURE }}
            - name: AZURE_ACCOUNT_NAME
              value: "{{ .AZURE_ACCOUNT_NAME }}"
            - name: AZURE_ACCOUNT_KEY
              value: {{ .AZURE_ACCOUNT_KEY }}
            - name: AZURE_BLOB_CONTAINER
              value: {{ .AZURE_BLOB_CONTAINER }}
            {{- end }}
            imagePullPolicy: Always
            args:
            - /bin/bash
            - -c
            - date1=$(date +%Y%m%d-%H%M); mv /tmp/backup.tar /tmp/backup-$date1.tar; az storage blob upload --account-name $AZURE_ACCOUNT_NAME --name postgres --container-name $AZURE_BLOB_CONTAINER --file /tmp/backup-$date1.tar --account-key $AZURE_ACCOUNT_KEY; 
          volumes:
          - name: psql-volume
            emptyDir: {}
          restartPolicy: OnFailure
---
{{ if semverCompare ">=1.21-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: batch/v1
{{ else -}}
apiVersion: batch/v1beta1
{{ end -}}
kind: CronJob
metadata:
    name: argocd-app-backup-cronjob
    namespace: devtroncd
spec:
  schedule: {{ .Values.global.schedule }}
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
          - name: argocd-app-backup-job
            image: argoproj/argocd:v1.8.1
            volumeMounts:
            - mountPath: /cache
              name: argocd-volume
            env:
            imagePullPolicy: Always
            args:
            - /bin/bash
            - -c
            - argocd-util export --namespace devtroncd > /cache/backup.yaml;
          containers:
          - name: azure-cli-download
            image: quay.io/devtron/k8s-utils:az-cli-ubuntu
            volumeMounts:
            - mountPath: /cache
              name: argocd-volume
            env:
            {{- with .Values.global.AZURE }}
            - name: AZURE_ACCOUNT_NAME
              value: "{{ .AZURE_ACCOUNT_NAME }}"
            - name: AZURE_ACCOUNT_KEY
              value: {{ .AZURE_ACCOUNT_KEY }}
            - name: AZURE_BLOB_CONTAINER
              value: {{ .AZURE_BLOB_CONTAINER }}
            {{- end }}
            imagePullPolicy: Always
            args:
            - /bin/bash
            - -c
            - date1=$(date +%Y%m%d-%H%M); mv /cache/backup.yaml /cache/backup-$date1.yaml; az storage blob upload --account-name $AZURE_ACCOUNT_NAME --name argocd --container-name $AZURE_BLOB_CONTAINER --file /cache/backup-$date1.yaml --account-key $AZURE_ACCOUNT_KEY;  
          volumes:
          - name: argocd-volume
            emptyDir: {}
          restartPolicy: OnFailure
          serviceAccountName: {{ .Values.argocd_backup.serviceAccountName }}
{{- end }}